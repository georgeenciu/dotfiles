-- M = {}
--
-- -- Configure EFM to do the formatting for JS/TS files.
-- local eslint = {
-- 	lintCommand = 'eslint_d -f unix --stdin --stdin-filename ${INPUT}',
-- 	lintIgnoreExitCode = true,
-- 	lintStdin = true,
-- 	lintFormats = { '%f:%l:%c: %m' },
-- 	-- formatCommand = "./node_modules/.bin/prettier --stdin-filepath ${INPUT}",
-- 	formatCommand = "prettier --stdin-filepath ${INPUT}",
-- 	formatStdin = true
-- }
--
--
-- local function on_attach(client)
-- 	-- We are going to use EFM to format typescript/javascript files
-- 	if client.name == "typescript" or client.name == "tsserver" then
-- 		client.server_capabilities.document_formatting = false
-- 	end
-- end
--
-- lspconfig.efm.setup {
-- 	init_options = { documentFormatting = true },
-- 	filetypes = {
-- 		"javascript", "javascriptreact", "javascript.jsx", "typescript", "typescript.tsx", "typescriptreact"
-- 	},
-- 	settings = {
-- 		rootMarkers = { ".git/" },
-- 		languages = {
-- 			javascript = { eslint },
-- 			javascriptreact = { eslint },
-- 			["javascript.jsx"] = { eslint },
-- 			typescript = { eslint },
-- 			["typescript.tsx"] = { eslint },
-- 			typescriptreact = { eslint },
-- 		}
-- 	}
-- }
--
-- M.on_attach = on_attach
-- return M
